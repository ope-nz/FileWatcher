AppType=JavaFX
Build1=Default,nz.op.filewatcher
File1=favicon.png
FileGroup1=Default Group
Group=Default Group
Library1=jcore
Library2=jfilewatcher
Library3=jsql
Library4=jsystemtray
Library5=jfx
Library6=githubapi
Library7=javaobject
Library8=json
Library9=jutilities
NumberOfFiles=1
NumberOfLibraries=9
NumberOfModules=0
Version=7.98
@EndOfDesignText@
&#39;Non-UI application (console / server application)
#Region Project Attributes 
	#CommandLineArgs:
	#MergeLibraries: True
	#AdditionalJar: sqlite-jdbc-3.27.2.1
	
	&#39;#VirtualMachineArgs: -DproxySet=true -Dhttps.proxyHost=127.0.0.1 -Dhttps.proxyPort=8888
	
	#if RELEASE		
		#CustomBuildAction: 2, C:\Apps\B4J\Tools\CompileOnly\compileonly.bat,		
	#end if	
#End Region

Sub Process_Globals
	Private fx As JFX
	
	Dim f As FileWatcher
	
	Dim ignore_ext As List
	Dim ignore_files As List
	Dim ignore_folders As List
	
	Dim api_token As String
	Dim user_or_org_name As String
	
	Dim DB As SQL
	
	Private tray As SystemTray
	Private icon1 As TrayIcon
	Private LogoImage As Image
	
	&#39;Dim j As jUtilities
End Sub

Sub AppStart (Form1 As Form, Args() As String)
	LogoImage = fx.LoadImage(File.DirAssets, &quot;favicon.png&quot;)
	
	DB.InitializeSQLite(File.DirApp,&quot;ChangeLog.sqlite&quot;,True)
	
	DB.ExecNonQuery($&quot;CREATE TABLE IF NOT EXISTS &quot;Changes&quot; (
	&quot;FileName&quot; TEXT,
	&quot;FileDirectory&quot; TEXT,
	&quot;ChangeType&quot; TEXT,
	&quot;TimeStamp&quot; INTEGER,
	PRIMARY KEY(&quot;FileName&quot;,&quot;FileDirectory&quot;)
	);&quot;$)
		
	f.Initialize(&quot;fw&quot;)
	
	Dim config As String = File.ReadString(File.DirApp,&quot;config.json&quot;)
	
	Dim parser As JSONParser
	parser.Initialize(config)
	
	Dim root As Map = parser.NextObject
	ignore_folders = root.Get(&quot;ignore_folders&quot;)
	ignore_files = root.Get(&quot;ignore_files&quot;)
	ignore_ext = root.Get(&quot;ignore_ext&quot;)
	
	Dim github As Map = root.Get(&quot;github&quot;)
	user_or_org_name = github.Get(&quot;user_or_org_name&quot;)
	api_token = github.Get(&quot;api_token&quot;)
	
	Dim watch_folders As List = root.Get(&quot;watch_folders&quot;)
	
	Log(ignore_ext)
	Log(ignore_folders)
	Log(watch_folders)
	Log(api_token)
	Log(user_or_org_name)	
	
	f.SetWatchList(watch_folders)	
		
	f.StartWatching
	
	tray.Initialize
	Dim MenuItems() As String = Array As String(&quot;Push Changes&quot;, &quot;-&quot;, &quot;Exit&quot;)
	icon1.Initialize(&quot;icon1&quot;, LogoImage, MenuItems)
	icon1.ToolTip = &quot;Changes in queue: &quot; &amp; GetChangeCount
	tray.AddTrayIcon(icon1)
End Sub

Sub Icon1_MenuClick (Text As String)
	Select Text
		Case &quot;Push Changes&quot;
			PushChanges
		Case &quot;Exit&quot;
			DB.Close
			ExitApplication
	End Select
End Sub

Sub fw_ModificationDetected(FileName As String, FileDirectory As String)
	Log(FileName)
	Log(FileDirectory)
	LogChange(FileName,FileDirectory,&quot;MODIFY&quot;)
End Sub

Sub fw_CreationDetected(FileName As String, FileDirectory As String)
	Log(FileName)
	Log(FileDirectory)
	LogChange(FileName,FileDirectory,&quot;CREATE&quot;)
End Sub

Sub fw_DeletionDetected(FileName As String, FileDirectory As String)
	Log(FileName)
	Log(FileDirectory)
	LogChange(FileName,FileDirectory,&quot;DELETE&quot;)
End Sub

Sub GetFileExt(FileName As String) As String
	Dim idx As Int = FileName.LastIndexof(&quot;.&quot;)	
	If idx = -1 Then Return &quot;&quot;	
	Return(FileName.SubString2(idx, FileName.Length))
End Sub

Sub GetChangeCount() As Int
	Dim result As Int = DB.ExecQuerySingleResult(&quot;select count(*) from Changes&quot;)
	
	Return result
End Sub

Sub GetProjectName(FileDirectory As String) As String
	Dim l As List = File.ListFiles(FileDirectory)
	
	For Each fl As String In l
		If fl.EndsWith(&quot;.b4j&quot;) Then			
			Return fl.Replace(&quot;.b4j&quot;,&quot;&quot;)
		End If
	Next
	
	If FileDirectory.Contains(&quot;src&quot;) Then
		Dim i1 As Int = FileDirectory.IndexOf(&quot;src&quot;)		
		Dim projectname As String = FileDirectory.SubString2(0,i1-1)
		
		Dim i2 As Int = projectname.LastIndexOf(&quot;\&quot;)+1
		
		projectname = projectname.SubString(i2)
		
		Return projectname
	End If
	
	If File.Exists(FileDirectory,&quot;git-repo-name.txt&quot;) Then
		projectname = File.ReadString(FileDirectory,&quot;git-repo-name.txt&quot;)
		Return projectname
	End If
	
	Return &quot;&quot;
End Sub

Sub LogChange(FileName As String, FileDirectory As String, ChangeType As String) As Boolean
	If ignore_folders.IndexOf(FileName) &gt; -1 Then Return False
	
	If ignore_files.IndexOf(FileName) &gt; -1 Then Return False
	
	If GetFileExt(FileName) = &quot;&quot; Then
		&#39;Its a folder so ignore
		Return False
	End If
	
	If ignore_ext.IndexOf(GetFileExt(FileName)) &gt; -1 Then Return False
		
	Log(ChangeType &amp; &quot;: &quot; &amp; FileDirectory &amp; &quot;\&quot; &amp; FileName)
		
	DB.ExecNonQuery2(&quot;REPLACE into Changes (FileName,FileDirectory,ChangeType,TimeStamp) values (?,?,?,?)&quot;,Array As Object(FileName,FileDirectory,ChangeType,DateTime.Now))
	
	icon1.ToolTip = &quot;Changes in queue: &quot; &amp; GetChangeCount
	
	Return True
End Sub

Sub PushChanges()
	Dim SearchQuery As String
	SearchQuery = &quot;select * from Changes order by FileDirectory,FileName,Timestamp&quot;
		
	Dim Cursor1 As ResultSet
	Cursor1 = DB.ExecQuery(SearchQuery)
	
	&#39;Dim auth_token As String = File.ReadString(File.DirApp,&quot;auth_token.txt&quot;)
	&#39;Dim repo_parent As String = File.ReadString(File.DirApp,&quot;repo_parent_org_or_name.txt&quot;)
	
	Dim hub As githubapi
	hub.Initialize2(api_token)
	
	If hub.isCredentialValid = False Then
		Dim jo As JavaObject = icon1
		jo.RunMethod(&quot;displayMessage&quot;,Array As Object(&quot;Error&quot;, &quot;Could not log into GitHub using auth token!&quot;, &quot;ERROR&quot;))
		Return 
	End If
	
	Do While Cursor1.NextRow
		Try
			Dim FileName As String = Cursor1.GetString(&quot;FileName&quot;)
			Dim FileDirectory As String = Cursor1.GetString(&quot;FileDirectory&quot;)
			Dim ChangeType As String = Cursor1.GetString(&quot;ChangeType&quot;)
			
			Dim SafeFileName As String = FileName.Replace(&quot; &quot;,&quot;%20&quot;)
					
			Dim ProjectName As String = GetProjectName(FileDirectory)
			
			Log(&quot;-----------------------&quot;)
			Log(FileName)
			Log(SafeFileName)
			Log(ProjectName)
			
			Dim repo As GHRepository
			repo.Initialize

			repo = hub.getRepository(user_or_org_name &amp; &quot;/&quot; &amp; ProjectName)
			
			&#39; If the repo isnt initialised then create it
			If repo.IsInitialized = False Then
				repo = hub.createRepository(ProjectName,&quot;&quot;,&quot;&quot;,False)
			End If
			
			If repo.IsInitialized = True Then									
				&#39;Try and get the file			
				Dim c As GHContent
				c = repo.getFileContent(SafeFileName)
				
				If c.IsInitialized = False Then
					&#39;File doesnt exist
					If ChangeType &lt;&gt; &quot;DELETE&quot; Then
						Log(&quot;Creating GITHUB &quot;&amp;FileName)
						If File.Exists(FileDirectory,FileName) = False Then
							Log(&quot;File doesnt exist on file system?&quot;)
						Else
							&#39;Could be a create or update but file doesnt exist so creating anyway
							
							Dim SafeFileContent As String = $&quot;$xml{File.ReadString(FileDirectory,FileName)}&quot;$
							
							repo.createContent(SafeFileContent,&quot;Initial Commit&quot;,SafeFileName)
						End If
					Else
						&#39;Well file doesnt exist on GitHub so ignoring
						Log(&quot;Ignoring delete as file doesnt exist&quot;)
					End If
				Else
					&#39;File exists
					If ChangeType = &quot;DELETE&quot; Then
						Log(&quot;Deleting GITHUB &quot;&amp;FileName)
						c.delete(&quot;Deleted&quot;)
					Else
						Log(&quot;Updating GITHUB &quot;&amp;FileName)
						If File.Exists(FileDirectory,FileName) = False Then
							Log(&quot;File doesnt exist on file system?&quot;)
						Else
							Dim SafeFileContent As String = $&quot;$xml{File.ReadString(FileDirectory,FileName)}&quot;$
							Log(SafeFileContent)						
							c.update(SafeFileContent,&quot;Update&quot;)
						End If
					End If
				End If
			End If

		Catch
			Log(&quot;Error occured with file &quot; &amp; FileName)
		End Try
	Loop
	
	Cursor1.Close
	
	DB.ExecNonQuery(&quot;delete from Changes&quot;)
	
	icon1.ToolTip = &quot;Changes in queue: &quot; &amp; GetChangeCount
	
	Dim jo As JavaObject = icon1
	jo.RunMethod(&quot;displayMessage&quot;,Array As Object(&quot;Success&quot;, &quot;Changes pushed successfully&quot;, &quot;NONE&quot;))
	Return
End Sub